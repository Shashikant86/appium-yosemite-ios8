{
  "name": "camel-back-promise",
  "version": "1.0.0",
  "description": "The straw that breaks the camel's back. A function which resolve a promise after getting called n times.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "promise"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/jonahss/camel-back-promise"
  },
  "author": {
    "name": "jonahss@gmail.com"
  },
  "license": "ISC",
  "dependencies": {},
  "readme": "## CamelBack Promise\n\n*The straw that breaks the camel's back*\n\nInstantiate by passing in a deferred promise and a number n. After the CamelBackPromise is called n times, the deferred promise is resolved.\n\n`npm install camel-back-promise`\n\n```\nvar CamelBackPromise = require('camel-back-promise');\n\nvar deferred = Q.defer();\ndeferred.promise.then(function(){\n  console.log(\"broke the camel's back\")\n});\n\nvar camelback = CamelBackPromise(deferred, 3);\n\ncamelback()\ncamelback()\ncamelback() // \"broke the camel's back\"\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jonahss/camel-back-promise/issues"
  },
  "homepage": "https://github.com/jonahss/camel-back-promise",
  "_id": "camel-back-promise@1.0.0",
  "_from": "camel-back-promise@^1.0.0"
}
