{
  "name": "appium",
  "description": "Automation for Apps.",
  "tags": [
    "automation",
    "javascript",
    "selenium",
    "webdriver",
    "ios",
    "android",
    "firefoxos",
    "testing"
  ],
  "version": "1.3.0-beta1",
  "author": {
    "name": "appium-discuss@googlegroups.com"
  },
  "licenses": [
    {
      "type": "apache-2.0",
      "url": "https://raw.github.com/appium/appium/master/LICENSE"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/appium/appium.git"
  },
  "bugs": {
    "url": "https://github.com/appium/appium/issues"
  },
  "engines": [
    "node"
  ],
  "main": "./lib/server/main.js",
  "bin": {
    "appium": "./bin/appium.js",
    "appium-doctor": "./bin/appium-doctor.js",
    "authorize_ios": "./bin/authorize-ios.js"
  },
  "directories": {
    "lib": "./lib",
    "doc": "./docs"
  },
  "dependencies": {
    "adm-zip": "~0.4.4",
    "appium-adb": "~1.3.16",
    "appium-atoms": "~0.0.5",
    "appium-instruments": "~1.4.7",
    "appium-uiauto": "~1.7.13",
    "argparse": "~0.1.15",
    "async": "~0.9.0",
    "binary-cookies": "~0.1.1",
    "body-parser": "~1.4.3",
    "bplist-creator": "~0.0.4",
    "bplist-parser": "~0.0.5",
    "bufferpack": "0.0.6",
    "bytes": "~1.0.0",
    "camel-back-promise": "^1.0.0",
    "colors": "~0.6.2",
    "date-utils": "~1.2.15",
    "difflib": "~0.2.4",
    "express": "~4.5.1",
    "glob": "~4.0.0",
    "grunt": "~0.4.5",
    "grunt-cli": "~0.1.13",
    "js2xmlparser2": "~0.2.0",
    "md5calculator": "~0.0.3",
    "method-override": "~2.0.1",
    "mkdirp": "~0.5.0",
    "morgan": "~1.1.1",
    "mv": "~2.0.0",
    "namp": "0.2.25",
    "ncp": "~0.5.1",
    "node-idevice": "~0.1.2",
    "node-uuid": "~1.4.1",
    "path": "~0.4.9",
    "plist": "~1.0.0",
    "prompt": "~0.2.13",
    "q": "~1.0.1",
    "request": "~2.36.0",
    "rimraf": "~2.2.8",
    "sandboxed-module": "~1.0.0",
    "serve-favicon": "~2.0.0",
    "socket.io": "~1.0.2",
    "swig": "~1.4.1",
    "temp": "~0.8.0",
    "through": "~2.3.4",
    "underscore": "~1.6.0",
    "underscore.string": "~2.3.3",
    "unzip": "~0.1.9",
    "utf7": "~1.0.0",
    "uuid-js": "~0.7.4",
    "vargs": "~0.1.0",
    "win-spawn": "~2.0.0",
    "winston": "~0.7.3",
    "ws": "~0.4.31",
    "xml2js": "~0.4.4",
    "xmldom": "~0.1.19",
    "xpath": "0.0.7"
  },
  "scripts": {
    "test": "grunt travis"
  },
  "devDependencies": {
    "assert": "~1.1.1",
    "chai": "~1.9.1",
    "chai-as-promised": "~4.1.1",
    "glob": "~4.0.0",
    "grunt-contrib-jshint": "~0.10.0",
    "grunt-jscs-checker": "~0.6.1",
    "grunt-mocha-test": "~0.11.0",
    "grunt-newer": "^0.7.0",
    "js-yaml": "~3.0.2",
    "mocha": "~1.20.0",
    "monocle-js": "~0.6.5",
    "node-static": "~0.7.3",
    "saucelabs": "~0.1.1",
    "sinon": "~1.10.0",
    "sinon-chai": "~2.5.0",
    "socket.io-client": "~1.0.2",
    "socks": "~0.0.1",
    "underscore-cli": "~0.2.17",
    "unorm": "~1.3.3",
    "wd": "~0.3.8",
    "wd-bridge": "~0.0.1",
    "yiewd": "~0.5.0"
  },
  "contributors": [
    {
      "name": "Authors ordered by first contribution"
    },
    {
      "name": "Dan Cuellar",
      "email": "dancuellar@me.com"
    },
    {
      "name": "E. James Infusino",
      "email": "jinfusino@gmail.com"
    },
    {
      "name": "Jason Huggins",
      "email": "hugs@saucelabs.com"
    },
    {
      "name": "Jason Carr",
      "email": "jcarr@saucelabs.com"
    },
    {
      "name": "Jayme Deffenbaugh",
      "email": "jdeffenbaugh@me.com"
    },
    {
      "name": "Roman Salvador",
      "email": "roman.salvador@gmail.com"
    },
    {
      "name": "Luke Inman-Semerau",
      "email": "luke.semerau@gmail.com"
    },
    {
      "name": "Pradeep Bishnoi",
      "email": "pradeepbishnoi@gmail.com"
    },
    {
      "name": "Charles Nowacek",
      "email": "charlie.nowacek@gmail.com"
    },
    {
      "name": "Jayakumar Chinnappan",
      "email": "jayakumareee21@gmail.com"
    },
    {
      "name": "Robin Keller",
      "email": "robinthekeller@gmail.com"
    },
    {
      "name": "Adam Christian",
      "email": "adam.christian@gmail.com"
    },
    {
      "name": "Jonathan Lipps",
      "email": "jlipps@gmail.com"
    },
    {
      "name": "Sebastian Tiedtke",
      "email": "sebastiantiedtke@gmail.com"
    },
    {
      "name": "Jeremy Avnet"
    },
    {
      "name": "Bernard Kobos",
      "email": "bkobos@extensa.pl"
    },
    {
      "name": "Santiago Suarez Ordo√±ez",
      "email": "santiycr@gmail.com"
    },
    {
      "name": "Joe Mathes"
    }
  ],
  "readme": "## Appium\n\n[![NPM version](https://badge.fury.io/js/appium.png)](https://npmjs.org/package/appium)\n[![Dependency Status](https://david-dm.org/appium/appium.svg)](https://david-dm.org/appium/appium)\n[![devDependency Status](https://david-dm.org/appium/appium/dev-status.svg)](https://david-dm.org/appium/appium#info=devDependencies)\n[![Build Status](https://api.travis-ci.org/appium/appium.png?branch=master)](https://travis-ci.org/appium/appium)\n[![Selenium Test Status](https://saucelabs.com/buildstatus/appium)](https://saucelabs.com/u/appium)\n\n[![Selenium Test Status](https://saucelabs.com/browser-matrix/appium.svg)](https://saucelabs.com/u/appium)\n\nAppium is an open source, cross-platform test automation tool for native, hybrid and mobile web apps, tested on simulators (iOS, FirefoxOS), emulators (Android), and real devices (iOS, Android, FirefoxOS).\n\n**Note:** we have just recently released Appium 1.0. If you already have a bunch of Appium tests, you might want to check out the [Migrating to 1.0](/docs/en/advanced-concepts/migrating-to-1-0.md) doc!\n\n### Supported Platforms\n\n* iOS\n* Android\n* FirefoxOS\n\nSee the [platform support doc](/docs/en/appium-setup/platform-support.md) for more detailed information.\n\n### Why Appium?\n\n1. You don't have to recompile your app or modify it in any way, due\n   to use of standard automation APIs on all platforms.\n2. You can write tests with your favorite dev tools using any [WebDriver](https://code.google.com/p/selenium/wiki/JsonWireProtocol)-compatible\n   language such as Java, [Objective-C](https://github.com/appium/selenium-objective-c),\n   JavaScript with Node.js (in [promise, callback](https://github.com/admc/wd) or [generator](https://github.com/jlipps/yiewd) flavors),\n   PHP, Python, [Ruby](https://github.com/appium/ruby_lib), C#, Clojure, or Perl\n   with the Selenium WebDriver API and language-specific client libraries.\n3. You can use any testing framework.\n\nInvesting in the [WebDriver](https://code.google.com/p/selenium/wiki/JsonWireProtocol) protocol means you are betting on a single, free and open protocol for testing that has become a defacto standard. Don't lock yourself into a proprietary stack.\n\nIf you use Apple's UIAutomation library without Appium you can only write tests\nusing JavaScript and you can only run tests through the Instruments application.\nSimilarly, with Google's UiAutomator you can only write tests in Java. Appium\nopens up the possibility of true cross-platform native mobile automation. Finally!\n\n### I don't get it yet...\n\nIf you're new to Appium, or want a fuller description of what this is all about, please read our [Introduction to Appium Concepts](/docs/en/about-appium/intro.md).\n\n### Requirements\n\nYour environment needs to be setup for the particular mobile platforms that you\nwant to run tests on. See below for particular platform requirements.\n\nIf you want to run Appium via an `npm install`, hack with or contribute to Appium, you will need\n[node.js and npm](http://nodejs.org) 0.10 or greater (use [n](https://github.com/visionmedia/n) or\n`brew install node` to install Node.js. Make sure you have not installed Node or Appium with `sudo`,\notherwise you'll run into problems). We recommend the latest stable version.\n\nTo verify that all of Appium's dependencies are met you can use `appium-doctor`.\nRun `appium-doctor` and supply the `--ios` or `--android` flags to verify that all\nof the dependencies are set up correctly. If running from source, you may have to use\n`./bin/appium-doctor.js` or `node bin/appium-doctor.js`.\n\nYou also need to download the Appium client for your language so you can write tests. The Appium clients are simple extensions to the WebDriver clients. You can see the list of clients and links to download instructions at the [Appium clients list](/docs/en/about-appium/appium-clients.md).\n\n#### iOS Requirements\n\n* Mac OS X 10.7 or higher, 10.9.2 recommended\n* XCode &gt;= 4.6.3, 5.1.1 recommended\n* Apple Developer Tools (iPhone simulator SDK, command line tools)\n* [Ensure you read our documentation on setting yourself up for iOS testing!](/docs/en/appium-setup/running-on-osx.md)\n\n#### Android Requirements\n\n* [Android SDK](http://developer.android.com) API &gt;= 17 (Additional features require 18/19)\n* Appium supports Android on OS X, Linux and Windows. Make sure you follow the\n  directions for setting up your environment properly for testing on different OSes:\n  * [linux](/docs/en/appium-setup/running-on-linux.md)\n  * [osx](/docs/en/appium-setup/running-on-osx.md)\n  * [windows](/docs/en/appium-setup/running-on-windows.md)\n\n#### FirefoxOS Requirements\n\n* [Firefox OS Simulator](https://developer.mozilla.org/en/docs/Tools/Firefox_OS_Simulator)\n\n### Quick Start\n\nKick up an Appium server, and then run a test written in your favorite [WebDriver](https://code.google.com/p/selenium/wiki/JsonWireProtocol)-compatible language!\nYou can run an Appium server using node.js or using the application, see below.\n\n#### Using Node.js\n\n    $ npm install -g appium\n    $ appium &\n\n#### Using the App\n\n* [Download the Appium app](https://github.com/appium/appium/releases)\n* Run it!\n\n### Writing Tests for Appium\n\nThe main guide for getting started writing and running tests is [the running tests](/docs/en/writing-running-appium/running-tests.md) doc, which includes explanations for iOS, Android, and Android older devices. If you're interested in testing on physical hardware, you might be interested in our [real devices guide](/docs/en/appium-setup/real-devices.md).\n\nEssentially, we support a subset of the [Selenium WebDriver JSON Wire Protocol](https://code.google.com/p/selenium/wiki/JsonWireProtocol), and extend it so that you can specify mobile-targeted [desired capabilities](/docs/en/writing-running-appium/caps.md) to run your test through Appium.\n\nYou find elements by using a subset of WebDriver's element-finding strategies.\nSee [finding elements](/docs/en/writing-running-appium/finding-elements.md) for detailed information. We also have several extensions to the JSON Wire Protocol for [automating mobile gestures](/docs/en/writing-running-appium/touch-actions.md) like tap, flick, and swipe.\n\nYou can also automate web views in hybrid apps! See the [hybrid app guide](/docs/en/advanced-concepts/hybrid.md)\n\nThis repository contains [many examples of tests in a variety of different languages](https://github.com/appium/sample-code)!\n\nFor the full list of Appium doc pages, visit [this directory](/docs/en/).\n\n### How It Works\n\nAppium drives various native automation frameworks and provides an API based on\nSelenium's [WebDriver JSON wire protocol](https://code.google.com/p/selenium/wiki/JsonWireProtocol).\n\nAppium drives Apple's UIAutomation library for iOS support, which is based on\n[Dan Cuellar's](http://github.com/penguinho) work on iOS Auto.\n\nAndroid support uses the UiAutomator framework for newer platforms and\n[Selendroid](http://github.com/DominikDary/selendroid) for older Android platforms.\n\nFirefoxOS support leverages [Marionette](https://developer.mozilla.org/en-US/docs/Marionette),\nan automation driver that is compatible with WebDriver and is used to automate\nGecko-based platforms.\n\n### Contributing\n\nPlease take a look at our [contribution documentation](CONTRIBUTING.md)\nfor instructions on how to build, test and run Appium from source.\n\n### Project Credits & Inspiration\n\n[Credits](/docs/en/contributing-to-appium/credits.md)\n\n### Mailing List\n\nAnnouncements and debates often take place on the [Discussion Group](https://discuss.appium.io), be sure to sign up!\n\n### Troubleshooting\n\nWe put together a [troubleshooting guide](/docs/en/appium-setup/troubleshooting.md).\nPlease have a look here first if you run into any problems. It contains instructions for checking a lot\nof common errors and how to get in touch with the community if you're stumped.\n\n### Using Robots\n\nUsing Appium with [Tapster](https://github.com/hugs/tapsterbot) and other robots is possible,\ncheck out the [Appium Robots](https://github.com/appium/robots) project!\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/appium/appium",
  "_id": "appium@1.3.0-beta1",
  "_from": "appium@1.3.0beta1"
}
